apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

group = 'com.github.blockstack'

android {
    compileSdkVersion build_versions.compile_sdk

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 2
        versionName "0.6.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile mySigningConfigs.debug.storeFile
            storePassword mySigningConfigs.debug.storePassword
            keyAlias mySigningConfigs.debug.keyAlias
            keyPassword mySigningConfigs.debug.keyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/kotlinx-io.kotlin_module'
        exclude 'META-INF/kbignumbers.kotlin_module'
        exclude 'META-INF/ripemd160.kotlin_module'
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'META-INF/extensions.kotlin_module'
        exclude 'META-INF/core.kotlin_module'
        exclude 'META-INF/keccak.kotlin_module'
        exclude 'META-INF/sha256.kotlin_module'
        exclude 'META-INF/khash-extensions.kotlin_module'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}

dokka {
    includes = ['module.md']
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}


dependencies {
    implementation deps.material

    implementation deps.app_compat
    implementation deps.androidx.legacy
    implementation deps.androidx.prefs
    implementation deps.constraint_layout
    implementation deps.androidx.browser

    implementation deps.kotlin.stdlib
    implementation deps.kotlin.reflect
    implementation deps.coroutines.android
    implementation deps.lifecycle.runtime_ktx

    api deps.crypto.kbip44
    implementation deps.crypto.kbase58
    implementation deps.crypto.bouncycastle

    implementation deps.kethereum.crypto_api
    implementation deps.kethereum.bip39_wordlist_en
    api(deps.kethereum.bip32) { exclude group: 'com.github.komputing.KHash' }
    api(deps.kethereum.bip39) { exclude group: 'com.github.komputing.KHash' }


    implementation deps.khash.sha256
    implementation deps.khash.ripemd160

    api deps.network.okhttp
    api(deps.network.did_jwt) {
        exclude group: 'com.github.komputing.KHash'
        exclude group: 'com.squareup.okhttp3'
    }

    testImplementation deps.junit
    testImplementation 'org.json:json:20190722'

    androidTestImplementation deps.atsl.rules
    androidTestImplementation deps.atsl.ext_junit
    androidTestImplementation deps.atsl.uiautomator
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.espresso.intents
}


/**
 * How to get a new `blockstack.js` version?
 *
 * 1. change the url in downloadBlockstackJs
 * 2. ./gradlew updateBlockstackJs
 */


task downloadBlockstackJs(type: Download) {
    src 'https://unpkg.com/blockstack@21.1.1/dist/blockstack.js'
    dest new File(buildDir, 'blockstack.js')
}

task updateBlockstackJs(dependsOn: downloadBlockstackJs, type: Copy) {
    from downloadBlockstackJs.dest
    into 'src/main/res/raw'
    include('blockstack.js')
    rename('(.*)', 'org_blockstack_$1')
    eachFile { fcp ->
        fcp.path = fcp.name
    }
}
